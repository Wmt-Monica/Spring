<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dreamplume.mapper.StudentMapper">
  <!--
    数据库表字段名称      实体对象属性名称
    user_name            userName
    product_type         productType
    如果数据库中的字段名称有多个单词构成，通过Mybatis逆向工程生成的对象属性名称
    会按照驼峰命名规则生成属性的名称，
    其中：数据库中的字段名称有多个单词构成的时候必须使用'_'下划线隔开
  -->

  <resultMap id="BaseResultMap" type="cn.dreamplume.model.Student">
    <!--
      id 标签只能修改主键字段
      result 除了主键以外的字段
      column 数据库中的字段名称
      property 映射对象的属性名称
      jdbcType 列中数据库中字段的类型(可以省略不写)
      resultMap作用：
        1.当数据库中的字段名称与实体对象的属性名称不一致时，可以进行转换
        2.当前查询的结果没有对象一个表的时候，可以自定义一个结果集
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
  </resultMap>

  <!--
    sql 语句片段，将公共的部分部分抽取出来
    通过 include 标签引用 sql 语句片段
   -->
  <sql id="Base_Column_List">
    id, name, age
  </sql>

  <!--
    其中参数的类型中基本数据类型都是采用包装数据类型，这样在填入参数的使用只需要对参
    数进行判断是否为null即可，不需要进行对数据判断是否为空==>""
  -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.dreamplume.model.Student">
    insert into t_student (id, name, age
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}
      )
  </insert>
  <!--
    trim 标签用于字符串的连接
    prefix:在添加字符串前面添加左括号
    suffix:在添加字符串后面添加右括号
    suffixOverrides:去除多余的逗号
  -->
  <insert id="insertSelective" parameterType="cn.dreamplume.model.Student">
    insert into t_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.dreamplume.model.Student">
    update t_student
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.dreamplume.model.Student">
    update t_student
    set name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>